[tool.poetry]
name = "dune_processes"
version = "0.1.0"
description = "[Description for project.]"
authors = [
    "Ryan Smith <ryan.smith@imperial.ac.uk>",
    "Imperial College London RSE Team <ict-rse-team@imperial.ac.uk>",
]

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.1"
whitenoise = "^6.7.0"
drunc = { git = "https://github.com/DUNE-DAQ/drunc.git" }
druncschema = { git = "https://github.com/DUNE-DAQ/druncschema.git" }
django-tables2 = "^2.7.0"
django-bootstrap5 = "^24.2"
pytest-asyncio = "^0.24.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
pytest-cov = "^5.0.0"
pytest-mypy = "^0.10.0"
pytest-mock = "^3.7.0"
pre-commit = "^3.0.4"
ruff = "^0.6.4"
django-stubs = { extras = ["compatible-mypy"], version = "^5.0.4" }
pytest-django = "^4.9.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
disallow_any_explicit = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_ignores = true
disallow_untyped_defs = true
exclude = [".venv/", "manage.py", "main/migrations/"]
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["druncschema.*", "drunc.*", "django_tables2.*", "kafka.*"]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "dune_processes.settings"

[tool.pytest.ini_options]
addopts = "-v --mypy -p no:warnings --cov=dune_processes --cov-report=html --doctest-modules --ignore=manage.py --ignore=dune_processes/settings/"
DJANGO_SETTINGS_MODULE = "dune_processes.settings"
FAIL_INVALID_TEMPLATE_VARS = true

[tool.ruff]
exclude = ["main/migrations"]
target-version = "py312"

[tool.ruff.lint]
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "RUF", # ruff
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100",
    "D104",
] # Missing docstring in public module, Missing docstring in public package
